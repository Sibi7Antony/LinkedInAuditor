import React, { useState } from 'react';
import { Download, Share2, FileText, CheckCircle } from 'lucide-react';
import type { AnalysisResult, ProfileData } from '../types';

interface ExportPanelProps {
  analysis: AnalysisResult;
  profileData: ProfileData | null;
}

export const ExportPanel: React.FC<ExportPanelProps> = ({ analysis, profileData }) => {
  const [exportType, setExportType] = useState<'report' | 'content' | 'checklist'>('report');
  const [isExporting, setIsExporting] = useState(false);

  const handleExport = async (type: string) => {
    setIsExporting(true);
    
    // Simulate export process
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    let content = '';
    let filename = '';
    
    switch (type) {
      case 'report':
        content = generateReport();
        filename = 'linkedin-profile-analysis.txt';
        break;
      case 'content':
        content = generateImprovedContent();
        filename = 'improved-linkedin-content.txt';
        break;
      case 'checklist':
        content = generateChecklist();
        filename = 'linkedin-optimization-checklist.txt';
        break;
    }
    
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = filename;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    setIsExporting(false);
  };

  const generateReport = () => {
    return `LinkedIn Profile Analysis Report
Generated on: ${new Date().toLocaleDateString()}

OVERALL SCORE: ${analysis.overall_score}/100

DETAILED BREAKDOWN:
${Object.entries(analysis.categories).map(([category, data]) => 
  `${category.replace('_', ' ').toUpperCase()}: ${data.score}/100
  Feedback: ${data.feedback}
  Suggestions:
  ${data.suggestions.map(s => `  â€¢ ${s}`).join('\n')}
`).join('\n\n')}

PRIORITY IMPROVEMENTS:
${analysis.improvements.map((improvement, i) => `${i + 1}. ${improvement}`).join('\n')}

This report was generated by LinkedIn Profile Auditor AI.
`;
  };

  const generateImprovedContent = () => {
    return `Improved LinkedIn Content

OPTIMIZED HEADLINE:
Senior Full-Stack Engineer | React & Node.js Expert | Team Lead | Building Products that Scale

ENHANCED ABOUT SECTION:
Passionate software engineer with 5+ years of experience building scalable web applications. I specialize in React, Node.js, and cloud architecture, having led teams that delivered products used by 100K+ users. I'm driven by solving complex problems and mentoring the next generation of developers.

Key achievements:
â€¢ Led development of customer-facing platform serving 100K+ daily active users
â€¢ Reduced application load time by 40% through performance optimization
â€¢ Mentored 8 junior developers, with 90% promotion rate within 18 months

I'm always excited to discuss innovative tech solutions and team leadership strategies. Let's connect!

RECOMMENDED SKILLS TO ADD:
â€¢ Cloud Architecture (AWS/Azure)
â€¢ Team Leadership
â€¢ Performance Optimization
â€¢ Agile/Scrum Methodologies
â€¢ Technical Mentoring

This content was optimized by LinkedIn Profile Auditor AI.
`;
  };

  const generateChecklist = () => {
    return `LinkedIn Profile Optimization Checklist

PROFILE BASICS:
â–¡ Professional headshot with good lighting
â–¡ Background image that reflects your industry
â–¡ Optimized headline with keywords
â–¡ Custom LinkedIn URL

ABOUT SECTION:
â–¡ Clear value proposition in first 2 lines
â–¡ Specific achievements with numbers
â–¡ Call-to-action at the end
â–¡ Industry keywords naturally integrated

EXPERIENCE:
â–¡ Quantified achievements for each role
â–¡ Action verbs to start bullet points
â–¡ Recent accomplishments highlighted
â–¡ Skills demonstrated through examples

SKILLS & ENDORSEMENTS:
â–¡ Top 5 skills prioritized
â–¡ Mix of hard and soft skills
â–¡ Skills aligned with target roles
â–¡ Regular skill assessments completed

ACTIVITY & ENGAGEMENT:
â–¡ Post valuable content weekly
â–¡ Engage with others' posts meaningfully
â–¡ Share industry insights
â–¡ Comment thoughtfully on relevant posts

NETWORKING:
â–¡ Connect with industry professionals
â–¡ Send personalized connection requests
â–¡ Follow up with new connections
â–¡ Join relevant LinkedIn groups

RECOMMENDATIONS:
â–¡ Request recommendations from colleagues
â–¡ Offer to write recommendations for others
â–¡ Include diverse perspectives (manager, peer, direct report)

This checklist was created by LinkedIn Profile Auditor AI.
`;
  };

  const shareResults = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: 'My LinkedIn Profile Score',
          text: `I scored ${analysis.overall_score}/100 on my LinkedIn profile analysis! ðŸš€`,
          url: window.location.href,
        });
      } catch (err) {
        // Fallback to clipboard
        navigator.clipboard.writeText(`I scored ${analysis.overall_score}/100 on my LinkedIn profile analysis! ðŸš€`);
      }
    } else {
      // Fallback for browsers that don't support Web Share API
      navigator.clipboard.writeText(`I scored ${analysis.overall_score}/100 on my LinkedIn profile analysis! ðŸš€`);
    }
  };

  return (
    <div className="max-w-4xl mx-auto">
      <div className="text-center mb-8">
        <h2 className="text-3xl font-bold text-[#C9D1D9] mb-4 font-mono">
          Export & Share
        </h2>
        <p className="text-[#8B949E] text-lg">
          Download your analysis results and optimized content
        </p>
      </div>

      {/* Export Options */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        {[
          {
            id: 'report',
            title: 'Full Analysis Report',
            description: 'Complete breakdown of your profile scores and recommendations',
            icon: FileText,
            color: '#58A6FF'
          },
          {
            id: 'content',
            title: 'Optimized Content',
            description: 'AI-improved headlines, about section, and suggested skills',
            icon: FileText,
            color: '#22c55e'
          },
          {
            id: 'checklist',
            title: 'Action Checklist',
            description: 'Step-by-step tasks to improve your LinkedIn profile',
            icon: CheckCircle,
            color: '#eab308'
          }
        ].map((option) => {
          const Icon = option.icon;
          return (
            <div
              key={option.id}
              className={`bg-[#161B22] border rounded-lg p-6 cursor-pointer transition-all duration-200 ${
                exportType === option.id
                  ? 'border-[#58A6FF] bg-[#58A6FF]/5'
                  : 'border-[#30363d] hover:border-[#58A6FF]/50'
              }`}
              onClick={() => setExportType(option.id as any)}
            >
              <div className="flex items-start space-x-3">
                <div 
                  className="p-2 rounded-lg"
                  style={{ backgroundColor: `${option.color}20`, border: `1px solid ${option.color}50` }}
                >
                  <Icon className="w-5 h-5" style={{ color: option.color }} />
                </div>
                <div className="flex-1">
                  <h3 className="font-semibold text-[#C9D1D9] mb-2">{option.title}</h3>
                  <p className="text-sm text-[#8B949E] leading-relaxed">{option.description}</p>
                </div>
              </div>
            </div>
          );
        })}
      </div>

      {/* Export Actions */}
      <div className="bg-[#161B22] border border-[#30363d] rounded-lg p-6 mb-8">
        <div className="flex flex-col md:flex-row gap-4">
          <button
            onClick={() => handleExport(exportType)}
            disabled={isExporting}
            className="flex-1 flex items-center justify-center space-x-2 bg-[#58A6FF] text-[#0D1117] py-3 px-6 rounded-md font-semibold hover:bg-[#4493e0] disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-lg shadow-[#58A6FF]/25"
          >
            <Download className="w-4 h-4" />
            <span>{isExporting ? 'Generating...' : 'Download Export'}</span>
          </button>
          
          <button
            onClick={shareResults}
            className="flex-1 flex items-center justify-center space-x-2 bg-[#21262d] text-[#C9D1D9] py-3 px-6 rounded-md font-semibold hover:bg-[#30363d] transition-all duration-200 border border-[#30363d] hover:border-[#58A6FF]/50"
          >
            <Share2 className="w-4 h-4" />
            <span>Share Results</span>
          </button>
        </div>
      </div>

      {/* Preview */}
      <div className="bg-[#161B22] border border-[#30363d] rounded-lg p-6">
        <h3 className="text-lg font-semibold text-[#C9D1D9] mb-4 font-mono">
          Preview
        </h3>
        <div className="bg-[#0D1117] border border-[#30363d] rounded-md p-4 max-h-64 overflow-y-auto">
          <pre className="text-xs text-[#8B949E] font-mono leading-relaxed whitespace-pre-wrap">
            {exportType === 'report' && generateReport().substring(0, 500) + '...'}
            {exportType === 'content' && generateImprovedContent().substring(0, 500) + '...'}
            {exportType === 'checklist' && generateChecklist().substring(0, 500) + '...'}
          </pre>
        </div>
      </div>

      {/* Social Sharing Stats */}
      <div className="mt-8 text-center">
        <div className="inline-flex items-center space-x-6 bg-[#161B22] border border-[#30363d] rounded-lg py-4 px-8">
          <div className="text-center">
            <div className="text-2xl font-bold text-[#58A6FF] font-mono">{analysis.overall_score}</div>
            <div className="text-xs text-[#8B949E] font-mono">Your Score</div>
          </div>
          <div className="w-px h-8 bg-[#30363d]"></div>
          <div className="text-center">
            <div className="text-2xl font-bold text-[#22c55e] font-mono">
              {Math.max(0, analysis.overall_score - 65)}
            </div>
            <div className="text-xs text-[#8B949E] font-mono">Points Above Average</div>
          </div>
          <div className="w-px h-8 bg-[#30363d]"></div>
          <div className="text-center">
            <div className="text-2xl font-bold text-[#eab308] font-mono">
              {Object.values(analysis.categories).filter(c => c.score >= 80).length}
            </div>
            <div className="text-xs text-[#8B949E] font-mono">Strong Areas</div>
          </div>
        </div>
      </div>
    </div>
  );
};